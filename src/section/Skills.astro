---
import SectionTitle from '../components/SectionTitle.astro';

type Skills = {
  skillName: string;
  dataValue: string;
}[];

const skills: Skills = [
  { skillName: 'HTML', dataValue: '7' },
  { skillName: 'CSS', dataValue: '7' },
  { skillName: 'JavaScript（ES6+）', dataValue: '5' },
  { skillName: 'TypeScript', dataValue: '3' },
  { skillName: 'React', dataValue: '4' },
  { skillName: 'Astro', dataValue: '6' },
  { skillName: 'Figma', dataValue: '7' },
  { skillName: 'Git / GitHub', dataValue: '5' },
];
---

<section id="skills" class="skills">
  <SectionTitle dataNumber="2" sectionTitle="My Skills" />
  <div class="skills__container">
    {
      skills.map((skill) => (
        <div class="skills__item">
          <p class="skills__item__title">{skill.skillName}</p>
          <progress value="0" max="10" data-value={skill.dataValue} class="progress-bar" />
        </div>
      ))
    }
  </div>
</section>

<style lang="scss">
  @import '../scss/main';

  .skills {
    display: flex;
    flex-direction: column;
    gap: 40px;
    width: min(100%, 1024px);
    margin-inline: auto;
    padding: 100px 0;
  }
  .skills__container {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-end;
    gap: 40px;
  }
  .skills__item {
    width: calc(50% - 40px);

    @include mq(md) {
      width: 100%;
    }
  }
  .skills__item__title {
    color: var(--color-section-headtext);
    margin-bottom: 8px;
  }

  // プログレスバー
  progress {
    width: 100%;
    height: 20px;
    appearance: none; // デフォルトスタイルを無効
    border-radius: 999px;

    @include mq(md) {
      height: 16px;
    }
  }
  progress::-webkit-progress-bar {
    background-color: var(--color-section-headtext);
    border-radius: 999px;
  }
  progress::-webkit-progress-value {
    background-color: var(--color-primary);
    border-radius: 999px;
  }
</style>

<script>
  import gsap from 'gsap';
  import ScrollTrigger from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);
  const progressbars = document.querySelectorAll('.progress-bar');
  progressbars.forEach((bar) => {
    const dataValue = bar.getAttribute('data-value');
    gsap.to(bar, {
      scrollTrigger: {
        trigger: '.skills',
        start: 'top center',
      },
      value: dataValue,
      duration: 2,
      ease: 'power1.inOut',
    });
  });
</script>
